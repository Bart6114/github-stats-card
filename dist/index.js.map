{"version":3,"file":"index.js","mappings":";AAAA;AACA;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../webpack://gh-stats/webpack/runtime/compat","../webpack://gh-stats/./src/index.ts"],"sourcesContent":["\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\\/\\/\\/\\w:/) ? 1 : 0, -1) + \"/\";","\"use strict\";\n// const core = require('@actions/core');\n// const github = require('@actions/github');\n// const collectStats = require('./collectStats');\n// const generateSvg = require('./generateSvg');\n// const _ = require('./config');\n// // try {\n// //   const username = core.getInput('username');\n// //   console.log(`Hello ${username}!`);\n// //   const time = (new Date()).toTimeString();\n// //   core.setOutput(\"time\", time);\n// //   // Get the JSON webhook payload for the event that triggered the workflow\n// //   const payload = JSON.stringify(github.context.payload, undefined, 2)\n// //   console.log(`The event payload: ${payload}`);\n// // } catch (error) {\n// //   core.setFailed(error.message);\n// // }\n// const userName = \"bart6114\"\n// collectStats(userName).then(stats => generateSvg({\n//   stats, username: userName,\n//   about: \"He/him, cheese, dad, data,\\nrocks & trails.\"\n// })).then(console.log)\n"],"names":[],"sourceRoot":""}